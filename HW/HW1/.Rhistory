plot(gk.sigma, gk.result[,3], ylim=c(0, 600)) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
W <- W_cal(x.train, gk.sigma[100])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f, type='2')
norm((W - diag(dt.size)) %*% f, type='2')
norm((W - diag(dt.size)) %*% f)
norm((W - diag(dt.size)) %*% f)^2
W <- W_cal(x.train, gk.sigma[10])
norm((W - diag(dt.size)) %*% f)^2
gk.sigma <- seq(from=0.01, to=2, by=0.01)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3]) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
dt.size=length(gk.sigma)
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(gk.sigma)
gk.result <- matrix(nrow=dt.size, ncol=3)
for (i in 1:dt.size)) {
dt.size
for (i in 1:dt.size) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq / dt.size
gk.result[i, 2] <- gk.var / dt.size
gk.result[i, 3] <- gk.sum / dt.size
}
plot(gk.sigma, gk.result[,3]) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
gk.sigma <- seq(from=0.01, to=0.5, by=0.01)
dt.size=length(gk.sigma)
gk.result <- matrix(nrow=dt.size, ncol=3)
for (i in 1:dt.size) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq / dt.size
gk.result[i, 2] <- gk.var / dt.size
gk.result[i, 3] <- gk.sum / dt.size
}
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:dt.size) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq / dt.size
gk.result[i, 2] <- gk.var / dt.size
gk.result[i, 3] <- gk.sum / dt.size
}
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq / dt.size
gk.result[i, 2] <- gk.var / dt.size
gk.result[i, 3] <- gk.sum / dt.size
}
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq / dt.size
gk.result[i, 2] <- gk.var / dt.size
gk.result[i, 3] <- gk.sum / dt.size
}
plot(gk.sigma, gk.result[,3]) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
plot(gk.sigma, gk.result[,3], ylim=c(0, 3)) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
gk.sigma <- seq(from=0.01, to=1, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2
gk.var <- noise.var * sum(diag(t(W) %*% W))
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq / dt.size
gk.result[i, 2] <- gk.var / dt.size
gk.result[i, 3] <- gk.sum / dt.size
}
plot(gk.sigma, gk.result[,3], ylim=c(0, 10)) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
which(min(result(,3)))
which(min(result(,3))
which(min(result(,3))
which(min(gk.result(,3)))
which(min(gk.result[],3]))
which(min(gk.result[,3]))
min(gk.result[,3])
which(gk.result[,3] == min(gk.result[,3]))
min(gk.result)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result))) +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), type='l') +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2 / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), type='l') +
lines(gk.sigma, gk.result[,2], col='red') +
lines(gk.sigma, gk.result[,1], col='blue')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='0', col='#e41a1c') +
lines(gk.sigma, gk.result[,2], col='#377eb8') +
lines(gk.sigma, gk.result[,1], col='#4daf4a')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='o', col='#e41a1c') +
lines(gk.sigma, gk.result[,2], col='#377eb8') +
lines(gk.sigma, gk.result[,1], col='#4daf4a')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='b', col='#e41a1c') +
lines(gk.sigma, gk.result[,2], col='#377eb8') +
lines(gk.sigma, gk.result[,1], col='#4daf4a')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='#e41a1c') +
lines(gk.sigma, gk.result[,2], col='#377eb8') +
lines(gk.sigma, gk.result[,1], col='#4daf4a')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='#e41a1c', lwd=2) +
lines(gk.sigma, gk.result[,2], col='#377eb8') +
lines(gk.sigma, gk.result[,1], col='#4daf4a')
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='#e41a1c', lwd=4) +
lines(gk.sigma, gk.result[,2], col='#377eb8', lwd=4) +
lines(gk.sigma, gk.result[,1], col='#4daf4a', lwd=4)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='#e41a1c', lwd=4) +
lines(gk.sigma, gk.result[,2], col='#377eb8', lwd=2) +
lines(gk.sigma, gk.result[,1], col='#4daf4a', lwd=2)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=2) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=2)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='red4', lwd=2) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=2) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=2)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='red4', lwd=5) +
lines(gk.sigma, gk.result[,4], col='orange', lwd=2) +
lines(gk.sigma, gk.result[,4], col='skyblue', lwd=2)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='red4', lwd=5) +
lines(gk.sigma, gk.result[,1], col='orange', lwd=4) +
lines(gk.sigma, gk.result[,2], col='skyblue', lwd=4)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='red4', lwd=5) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=4) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=4)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)),
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab=NULL,
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab=NULL,
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab=NULL,
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3) +
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'))
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3) +
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'))
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'))
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3) +
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'))
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=2) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=2)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=3) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=3.5) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1) +
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1) +
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
+ lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1) +
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4) +
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1) +
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
# return matrix of W
W_cal <- function(training, sigma_val) {
dt.size <- length(training)
W.result <- matrix(, nrow=dt.size, ncol=dt.size)
for (i in 1:dt.size) {
for (j in 1:dt.size) {
W.result[i, j] <- dnorm(training[j], training[i], sigma_val)
}
W.result[i, ] <- W.result[i, ] / sum(W.result[i, ])
}
return(W.result)
}
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2 / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3, pt.cex=0.8)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3, pt.cex=0.8)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3, cex=0.8)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3, pt.cex=0.5)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3, pt.cex=0)
which(gk.result[,3] == min(gk.result[,3]))
# sigma for smallest MSE
opt.sigma <- sigma[which(gk.result[,3] == min(gk.result[,3]))]
opt.sigma
# sigma for smallest MSE
opt.sigma <- gk.sigma[which(gk.result[,3] == min(gk.result[,3]))]
opt.sigma
opt.fhat <- W_cal(x.train, opt.sigma) %*% y.train
plot(x.train, y.train)
lines(x.train, opt.fhat)
lines(x.train, f)
opt.fhat <- W_cal(x.train, 1) %*% y.train
plot(x.train, y.train)
lines(x.train, opt.fhat)
lines(x.train, f)
# return matrix of W
W_cal <- function(training, sigma_val) {
dt.size <- length(training)
W.result <- matrix(, nrow=dt.size, ncol=dt.size)
for (i in 1:dt.size) {
for (j in 1:dt.size) {
W.result[i, j] <- dnorm(training[j], training[i], sigma_val)
}
W.result[i, ] <- W.result[i, ] / sum(W.result[i, ])
}
return(W.result)
}
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- norm((W - diag(dt.size)) %*% f)^2 / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
opt.fhat <- W_cal(x.train, opt.sigma) %*% y.train
plot(x.train, y.train)
lines(x.train, opt.fhat)
plot(x.train, y.train)
lines(x.train, opt.fhat)
lines(x.train, f)
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- sum((W - diag(dt.size)) %*% f)^2) / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- sum((W - diag(dt.size)) %*% f)^2) / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- sum((W - diag(dt.size)) %*% f)^2) / dt.size
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- sum(((W - diag(dt.size)) %*% f)^2) / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
gk.result[,1]
W <- W_cal(x.train, gk.sigma[100])
(W - diag(dt.size)) %*% f
(W - diag(dt.size)) * f
# sigma for smallest MSE
opt.sigma <- gk.sigma[which(gk.result[,3] == min(gk.result[,3]))]
opt.sigma
opt.fhat <- W_cal(x.train, opt.sigma) %*% y.train
plot(x.train, y.train)
lines(x.train, opt.fhat)
plot(x.train, y.train)
lines(x.train, opt.fhat)
lines(x.train, f)
plot(x.train, gk.result[,1])
plot(x.train, gk.result[,1], type='l')
opt.fhat <- W_cal(x.train, opt.sigma) %*% y.train
plot(x.train, y.train)
lines(x.train, opt.fhat)
lines(x.train, f)
plot(x.train, gk.result[,1])
plot(x.train, gk.result[,2])
plot(x.train, gk.result[,3])
# return matrix of W
W_cal <- function(training, sigma_val) {
dt.size <- length(training)
W.result <- matrix(, nrow=dt.size, ncol=dt.size)
for (i in 1:dt.size) {
for (j in 1:dt.size) {
W.result[i, j] <- dnorm(training[j], training[i], sigma_val)
}
W.result[i, ] <- W.result[i, ] / sum(W.result[i, ])
}
return(W.result)
}
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- sum(((W - diag(dt.size)) %*% f)^2) / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
# sigma for smallest MSE
opt.sigma <- gk.sigma[which(gk.result[,3] == min(gk.result[,3]))]
gk.sigma <- seq(from=0.01, to=2, by=0.01)
dt.size=length(x.train)
gk.result <- matrix(nrow=length(gk.sigma), ncol=3)
for (i in 1:length(gk.sigma)) {
W <- W_cal(x.train, gk.sigma[i])
gk.bias.sq <- sum(((W - diag(dt.size)) %*% f)^2) / dt.size
gk.var <- noise.var * sum(diag(t(W) %*% W)) / dt.size
gk.sum <- gk.bias.sq + gk.var
gk.result[i, 1] <- gk.bias.sq
gk.result[i, 2] <- gk.var
gk.result[i, 3] <- gk.sum
}
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
# sigma for smallest MSE
opt.sigma <- gk.sigma[which(gk.result[,3] == min(gk.result[,3]))]
opt.sigma
plot(gk.sigma, gk.result[,3], ylim=c(min(gk.result), max(gk.result)), xlab='Sigma', ylab='',
type='l', col='red4', lwd=4)
lines(gk.sigma, gk.result[,2], col='orange', lwd=3, lty=1)
lines(gk.sigma, gk.result[,1], col='skyblue', lwd=3, lty=1)
legend('topleft', legend=c('MSE', 'Bias', 'Var'), col=c('red4', 'skyblue', 'orange'), lwd=3)
opt.fhat <- W_cal(x.train, opt.sigma) %*% y.train
library(scales)
plot(x.train, y.train, col=alpha('gray50', alpha=0.5),
pch=16, cex=0.8, xlab='x', ylab='y')
plot(x.train, y.train, col=alpha('gray50', alpha=0.5),
pch=16, cex=0.8, xlab='x', ylab='y')
plot(x.train, y.train, col=alpha('gray50', alpha=0.5),
pch=16, cex=0.8, xlab='x', ylab='y')
plot(x.train, y.train, col='gray50', pch=16, cex=0.8, xlab='x', ylab='y')
plot(x.train, y.train, col='gray50', pch=16, cex=0.8, xlab='x', ylab='y')
lines(x.train, opt.fhat, col='skyblue', lwd=3, lty=1)
lines(x.train, f, col='orange', lwd=3, lty=1)
plot(x.train, y.train, col='gray50', pch=16, cex=0.8, xlab='x', ylab='y')
lines(x.train, opt.fhat, col='skyblue', lwd=2, lty=1)
lines(x.train, f, col='orange', lwd=2, lty=1)
plot(x.train, y.train, col='gray50', pch=16, cex=0.8, xlab='x', ylab='y')
lines(x.train, f, col='orange', lwd=2, lty=1)
lines(x.train, opt.fhat, col='skyblue', lwd=2, lty=1)
legend('bottomleft', legend=c('f', 'hat(f)'), col=c('orange', 'skyblue'), lwd=2, cex=0.8)
